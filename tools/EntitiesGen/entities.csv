// 環境設定
template,./template
output,CSharp,./../../app/client/Contrib.Gate/Assets/Application/Entities/Gen/
output,TypeScript,./../../app/server/Contrib.Gate/gen/

///========================================
/// 以下 enum
///========================================

// ユーザ生成状況
enum,UserCreateStep,
EnterName,,名前入力
Prologue,,プロローグ
Created,,作成済

// 広告報酬種類
enum,AdReward,
Unknown,,不明
Hatch,,孵化時間短縮
Unit,,ユニット解放

// Id タイプ
enum,IDType,
Unknown,,不明
Familiar,,使い魔
Material,,素材
Recipe,,レシピ
Item,,アイテム
Vending,,自販機
Dungeon,,ダンジョン
Room,,部屋設定
Stage,,ステージ
Enemy,,敵
EnemyGroup,,敵グループ
Drop,,ドロップ
Skill,,スキル

// ErrorCode
enum,ErrorCode,
None,0,
InvalidAdsCode,,無効な広告コード
CoinLack,,コインが不足
MaterialLack,,素材が不足
RecipeInvalid,,無効なレシピID
VendingInvalid,,無効な自販機ID
StageInvalid,,無効なステージID
StageCantMove,,ステージ移動できません
StageLoss,,ステージ消失
HatchMax,,孵化最大数に達した
Common,9998,一般エラー(一時対応時使用します)
Network,9999,ネットワークエラー

// 定数
enum,Const,
MaxHatch,3,同時最大孵化数
MaxPetInUnit,3,ユニットに配置最大ペット数
MaxUnit,5,ユニット最大数
FreeUnit,1,無料ユニット数(残りは広告をみて開放する)

// 移動先
enum,Move,
None,,なし
Up,,上の階へ移動
Down,,下の階へ移動

// 種族
enum,Race,
Beast,,
Undead,,
Fly,,
Insect,,
Plant,,
Amorphas,,
Metal,,
Dragon,,
Human,,
Other,,

// 使い魔パラメータ
enum,Param,
HP,,体力
MP,,魔力
PhysicalAttack,,物理攻撃
PhysicalDefense,,物理防御
MagicAttack,,魔法攻撃
MagicDefense,,魔法防御
Agility,,素早さ
Luck,,運
Count,,数

// スキル種類
enum,SkillType,
Physical,,物理
Magic,,魔法
Buff,,バフ
Debuff,,デバフ

// スキル使用対象
enum,SkiiTarget,
Self,,自分
Friend,,味方
Rival,,相手

// 属性
enum,Attribute,
Earth,,土
Water,,水
Fire,,火
Wind,,風
Count,,数

///========================================
/// 以下 class
///========================================

// Error
//class,ApiError,
//ErrorCode,errorCode,エラーコードが 0 以外だとエラー

// sv->cl へアイテム1個分
class,InventoryItem,
uint,identify,
int,num,所持数

class,UserState,
UserCreateStep,createStep,
string,playerName,
int,coin,

// ステージ情報
class,StageInfo,
uint,stageId,ステージID
uint,dungeonId,ダンジョンID
int,seed,乱数シード
string,guid,StageBegin時生成される値、フロア移動時のチェックに使用します
long,lossTime,消失時間
Move,move,移動方向
string[],pets,ペット一覧

// sv->cl タマゴデータ1個分
class,EggItem,
string,uniqid,識別ID
bool,judgment,鑑定済？
long,createTime,生成時間
Race,race,種族(鑑定したらわかる)
int,rarity,レアリティ(鑑定したらわかる)
uint,stage,入手ステージID

// sv->cl ペットデータ１個分
class,PetItem,
string,uniqid,識別ID
uint,id,使い魔ID
long,createTime,生成時間
int,level,レベル
int,exp,経験値
int,powerupCount,餌付け回数(最大回数は レベル - 1)
int[],param,餌付けによる増加パラメータ(Param)
uint,skill,スキル

// sv->cl 孵化予約データ1個分
class,HatchItem,
string,uniqid,識別ID
long,startTime,開始時間
long,timeRequired,秒数

// sv->cl 敵データ1個分
class,EnemyItem,
uint,id,敵のID
int,level,レベル

// sv->cl 経験値獲得データ1個
class,ExpItem,
string,uniqid,識別ID
int,exp,更新後所持経験値
int,add,増加した経験値
int,level,レベル
bool,levelup,レベルアップ

// ユニット
class,UnitItem,
int,id,Unit番号
string[],uniqids,識別ID一覧
long,expirationDate,有効期間 [無制限(-1) 未開放(0) それ以外(サーバ時間)]
string,name,ユニット名(ユーザのメモ入力領域)

// ステージ
class,StageItem,
uint,id,ステージID
long,clear,最後のクリアタイム
